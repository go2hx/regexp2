package _internal.github_dot_com.dlclark.regexp2;
import stdgo._internal.regexp.Regexp;
import stdgo._internal.time.Time;
import stdgo._internal.fmt.Fmt;
import _internal.github_dot_com.dlclark.regexp2.syntax.Syntax;
import stdgo._internal.strconv.Strconv;
import stdgo._internal.os.Os;
import stdgo._internal.log.Log;
import stdgo._internal.bufio.Bufio;
import stdgo._internal.strings.Strings;
import stdgo._internal.bytes.Bytes;
import stdgo._internal.reflect.Reflect;
import stdgo._internal.encoding.json.Json;
import stdgo._internal.errors.Errors;
import stdgo._internal.sync.atomic_.Atomic_;
import stdgo._internal.unicode.Unicode;
function testMono_Basics(_t:stdgo.Ref<stdgo._internal.testing.Testing_t_.T_>):Void {
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abc" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abc" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abc" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("xbc" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abc" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("axc" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abc" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abx" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abc" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("xabcy" : stdgo.GoString), ("Pass. Group[0]=(1,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abc" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ababc" : stdgo.GoString), ("Pass. Group[0]=(2,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab*c" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abc" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab*bc" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abc" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab*bc" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abbc" : stdgo.GoString), ("Pass. Group[0]=(0,4)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab*bc" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abbbbc" : stdgo.GoString), ("Pass. Group[0]=(0,6)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, (".{1}" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abbbbc" : stdgo.GoString), ("Pass. Group[0]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, (".{3,4}" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abbbbc" : stdgo.GoString), ("Pass. Group[0]=(0,4)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab{0,}bc" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abbbbc" : stdgo.GoString), ("Pass. Group[0]=(0,6)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab+bc" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abbc" : stdgo.GoString), ("Pass. Group[0]=(0,4)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab+bc" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abc" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab+bc" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abq" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab{1,}bc" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abq" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab+bc" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abbbbc" : stdgo.GoString), ("Pass. Group[0]=(0,6)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab{1,}bc" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abbbbc" : stdgo.GoString), ("Pass. Group[0]=(0,6)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab{1,3}bc" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abbbbc" : stdgo.GoString), ("Pass. Group[0]=(0,6)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab{3,4}bc" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abbbbc" : stdgo.GoString), ("Pass. Group[0]=(0,6)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab{4,5}bc" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abbbbc" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab?bc" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abbc" : stdgo.GoString), ("Pass. Group[0]=(0,4)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab?bc" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abc" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab{0,1}bc" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abc" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab?bc" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abbbbc" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab?c" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abc" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab{0,1}c" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abc" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^abc$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abc" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^abc$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abcc" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^abc" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abcc" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^abc$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aabc" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abc$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aabc" : stdgo.GoString), ("Pass. Group[0]=(1,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abc$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aabcd" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abc" : stdgo.GoString), ("Pass. Group[0]=(0,0)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abc" : stdgo.GoString), ("Pass. Group[0]=(3,0)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a.c" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abc" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a.c" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("axc" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a.*c" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("axyzc" : stdgo.GoString), ("Pass. Group[0]=(0,5)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a.*c" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("axyzd" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[bc]d" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abc" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[bc]d" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abd" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[b-d]e" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abd" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[b-d]e" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ace" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[b-d]" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aac" : stdgo.GoString), ("Pass. Group[0]=(1,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[-b]" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a-" : stdgo.GoString), ("Pass. Group[0]=(0,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[b-]" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a-" : stdgo.GoString), ("Pass. Group[0]=(0,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[b-a]" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-" : stdgo.GoString), ("Error." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[]b" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-" : stdgo.GoString), ("Error." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-" : stdgo.GoString), ("Error." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a]" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a]" : stdgo.GoString), ("Pass. Group[0]=(0,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[]]b" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a]b" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[^bc]d" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aed" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[^bc]d" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abd" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[^-b]c" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("adc" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[^-b]c" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a-c" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[^]b]c" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a]c" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[^]b]c" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("adc" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\ba\\b" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a-" : stdgo.GoString), ("Pass. Group[0]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\ba\\b" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-a" : stdgo.GoString), ("Pass. Group[0]=(1,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\ba\\b" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-a-" : stdgo.GoString), ("Pass. Group[0]=(1,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\by\\b" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("xy" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\by\\b" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("yz" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\by\\b" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("xyz" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\Ba\\B" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a-" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\Ba\\B" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-a" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\Ba\\B" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-a-" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\By\\b" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("xy" : stdgo.GoString), ("Pass. Group[0]=(1,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\by\\B" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("yz" : stdgo.GoString), ("Pass. Group[0]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\By\\B" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("xyz" : stdgo.GoString), ("Pass. Group[0]=(1,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\w" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a" : stdgo.GoString), ("Pass. Group[0]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\w" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\W" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\W" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-" : stdgo.GoString), ("Pass. Group[0]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a\\sb" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a b" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a\\sb" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a-b" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a\\Sb" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a b" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a\\Sb" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a-b" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\d" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("1" : stdgo.GoString), ("Pass. Group[0]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\d" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\D" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("1" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\D" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-" : stdgo.GoString), ("Pass. Group[0]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("[\\w]" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a" : stdgo.GoString), ("Pass. Group[0]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("[\\w]" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("[\\W]" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("[\\W]" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-" : stdgo.GoString), ("Pass. Group[0]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[\\s]b" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a b" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[\\s]b" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a-b" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[\\S]b" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a b" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[\\S]b" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a-b" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("[\\d]" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("1" : stdgo.GoString), ("Pass. Group[0]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("[\\d]" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("[\\D]" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("1" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("[\\D]" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-" : stdgo.GoString), ("Pass. Group[0]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab|cd" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abc" : stdgo.GoString), ("Pass. Group[0]=(0,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab|cd" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abcd" : stdgo.GoString), ("Pass. Group[0]=(0,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("()ef" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("def" : stdgo.GoString), ("Pass. Group[0]=(1,2) Group[1]=(1,0)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("*a" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-" : stdgo.GoString), ("Error." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(*)b" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-" : stdgo.GoString), ("Error." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("$b" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a\\" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-" : stdgo.GoString), ("Error." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a\\(b" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a(b" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a\\(*b" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ab" : stdgo.GoString), ("Pass. Group[0]=(0,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a\\(*b" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a((b" : stdgo.GoString), ("Pass. Group[0]=(0,4)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a\\\\b" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a\\b" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abc)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-" : stdgo.GoString), ("Error." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(abc" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-" : stdgo.GoString), ("Error." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("((a))" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abc" : stdgo.GoString), ("Pass. Group[0]=(0,1) Group[1]=(0,1) Group[2]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(a)b(c)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abc" : stdgo.GoString), ("Pass. Group[0]=(0,3) Group[1]=(0,1) Group[2]=(2,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a+b+c" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aabbabc" : stdgo.GoString), ("Pass. Group[0]=(4,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a{1,}b{1,}c" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aabbabc" : stdgo.GoString), ("Pass. Group[0]=(4,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a**" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-" : stdgo.GoString), ("Error." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a.+?c" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abcabc" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(a+|b)*" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ab" : stdgo.GoString), ("Pass. Group[0]=(0,2) Group[1]=(0,1)(1,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(a+|b){0,}" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ab" : stdgo.GoString), ("Pass. Group[0]=(0,2) Group[1]=(0,1)(1,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(a+|b)+" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ab" : stdgo.GoString), ("Pass. Group[0]=(0,2) Group[1]=(0,1)(1,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(a+|b){1,}" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ab" : stdgo.GoString), ("Pass. Group[0]=(0,2) Group[1]=(0,1)(1,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(a+|b)?" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ab" : stdgo.GoString), ("Pass. Group[0]=(0,1) Group[1]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(a+|b){0,1}" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ab" : stdgo.GoString), ("Pass. Group[0]=(0,1) Group[1]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, (")(" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-" : stdgo.GoString), ("Error." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("[^ab]*" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("cde" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abc" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), (stdgo.Go.str() : stdgo.GoString)?.__copy__(), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a*" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), (stdgo.Go.str() : stdgo.GoString)?.__copy__(), ("Pass. Group[0]=(0,0)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("([abc])*d" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abbbcd" : stdgo.GoString), ("Pass. Group[0]=(0,6) Group[1]=(0,1)(1,1)(2,1)(3,1)(4,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("([abc])*bcd" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abcd" : stdgo.GoString), ("Pass. Group[0]=(0,4) Group[1]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a|b|c|d|e" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("e" : stdgo.GoString), ("Pass. Group[0]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(a|b|c|d|e)f" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ef" : stdgo.GoString), ("Pass. Group[0]=(0,2) Group[1]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abcd*efg" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abcdefg" : stdgo.GoString), ("Pass. Group[0]=(0,7)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab*" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("xabyabbbz" : stdgo.GoString), ("Pass. Group[0]=(1,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab*" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("xayabbbz" : stdgo.GoString), ("Pass. Group[0]=(1,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(ab|cd)e" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abcde" : stdgo.GoString), ("Pass. Group[0]=(2,3) Group[1]=(2,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("[abhgefdc]ij" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("hij" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^(ab|cd)e" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abcde" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(abc|)ef" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abcdef" : stdgo.GoString), ("Pass. Group[0]=(4,2) Group[1]=(4,0)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(a|b)c*d" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abcd" : stdgo.GoString), ("Pass. Group[0]=(1,3) Group[1]=(1,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(ab|ab*)bc" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abc" : stdgo.GoString), ("Pass. Group[0]=(0,3) Group[1]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a([bc]*)c*" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abc" : stdgo.GoString), ("Pass. Group[0]=(0,3) Group[1]=(1,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a([bc]*)(c*d)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abcd" : stdgo.GoString), ("Pass. Group[0]=(0,4) Group[1]=(1,2) Group[2]=(3,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a([bc]+)(c*d)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abcd" : stdgo.GoString), ("Pass. Group[0]=(0,4) Group[1]=(1,2) Group[2]=(3,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a([bc]*)(c+d)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abcd" : stdgo.GoString), ("Pass. Group[0]=(0,4) Group[1]=(1,1) Group[2]=(2,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[bcd]*dcdcde" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("adcdcde" : stdgo.GoString), ("Pass. Group[0]=(0,7)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[bcd]+dcdcde" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("adcdcde" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(ab|a)b*c" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abc" : stdgo.GoString), ("Pass. Group[0]=(0,3) Group[1]=(0,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("((a)(b)c)(d)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abcd" : stdgo.GoString), ("Pass. Group[0]=(0,4) Group[1]=(0,3) Group[2]=(0,1) Group[3]=(1,1) Group[4]=(3,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("[a-zA-Z_][a-zA-Z0-9_]*" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("alpha" : stdgo.GoString), ("Pass. Group[0]=(0,5)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^a(bc+|b[eh])g|.h$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abh" : stdgo.GoString), ("Pass. Group[0]=(1,2) Group[1]=" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(bc+d$|ef*g.|h?i(j|k))" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("effgz" : stdgo.GoString), ("Pass. Group[0]=(0,5) Group[1]=(0,5) Group[2]=" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(bc+d$|ef*g.|h?i(j|k))" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ij" : stdgo.GoString), ("Pass. Group[0]=(0,2) Group[1]=(0,2) Group[2]=(1,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(bc+d$|ef*g.|h?i(j|k))" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("effg" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(bc+d$|ef*g.|h?i(j|k))" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("bcdd" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(bc+d$|ef*g.|h?i(j|k))" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("reffgz" : stdgo.GoString), ("Pass. Group[0]=(1,5) Group[1]=(1,5) Group[2]=" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("((((((((((a))))))))))" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a" : stdgo.GoString), ("Pass. Group[0]=(0,1) Group[1]=(0,1) Group[2]=(0,1) Group[3]=(0,1) Group[4]=(0,1) Group[5]=(0,1) Group[6]=(0,1) Group[7]=(0,1) Group[8]=(0,1) Group[9]=(0,1) Group[10]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("((((((((((a))))))))))\\10" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aa" : stdgo.GoString), ("Pass. Group[0]=(0,2) Group[1]=(0,1) Group[2]=(0,1) Group[3]=(0,1) Group[4]=(0,1) Group[5]=(0,1) Group[6]=(0,1) Group[7]=(0,1) Group[8]=(0,1) Group[9]=(0,1) Group[10]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("((((((((((a))))))))))!" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aa" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("((((((((((a))))))))))!" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a!" : stdgo.GoString), ("Pass. Group[0]=(0,2) Group[1]=(0,1) Group[2]=(0,1) Group[3]=(0,1) Group[4]=(0,1) Group[5]=(0,1) Group[6]=(0,1) Group[7]=(0,1) Group[8]=(0,1) Group[9]=(0,1) Group[10]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(((((((((a)))))))))" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a" : stdgo.GoString), ("Pass. Group[0]=(0,1) Group[1]=(0,1) Group[2]=(0,1) Group[3]=(0,1) Group[4]=(0,1) Group[5]=(0,1) Group[6]=(0,1) Group[7]=(0,1) Group[8]=(0,1) Group[9]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("multiple words of text" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("uh-uh" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("multiple words" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("multiple words, yeah" : stdgo.GoString), ("Pass. Group[0]=(0,14)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(.*)c(.*)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abcde" : stdgo.GoString), ("Pass. Group[0]=(0,5) Group[1]=(0,2) Group[2]=(3,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\((.*), (.*)\\)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("(a, b)" : stdgo.GoString), ("Pass. Group[0]=(0,6) Group[1]=(1,1) Group[2]=(4,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("[k]" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ab" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abcd" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abcd" : stdgo.GoString), ("Pass. Group[0]=(0,4)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a(bc)d" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abcd" : stdgo.GoString), ("Pass. Group[0]=(0,4) Group[1]=(1,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[-]?c" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ac" : stdgo.GoString), ("Pass. Group[0]=(0,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(abc)\\1" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abcabc" : stdgo.GoString), ("Pass. Group[0]=(0,6) Group[1]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("([a-c]*)\\1" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abcabc" : stdgo.GoString), ("Pass. Group[0]=(0,6) Group[1]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\1" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-" : stdgo.GoString), ("Error." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\2" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-" : stdgo.GoString), ("Error." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(a)|\\1" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a" : stdgo.GoString), ("Pass. Group[0]=(0,1) Group[1]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(a)|\\1" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("x" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(a)|\\2" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-" : stdgo.GoString), ("Error." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(([a-c])b*?\\2)*" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ababbbcbc" : stdgo.GoString), ("Pass. Group[0]=(0,5) Group[1]=(0,3)(3,2) Group[2]=(0,1)(3,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(([a-c])b*?\\2){3}" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ababbbcbc" : stdgo.GoString), ("Pass. Group[0]=(0,9) Group[1]=(0,3)(3,3)(6,3) Group[2]=(0,1)(3,1)(6,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("((\\3|b)\\2(a)x)+" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aaxabxbaxbbx" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("((\\3|b)\\2(a)x)+" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aaaxabaxbaaxbbax" : stdgo.GoString), ("Pass. Group[0]=(12,4) Group[1]=(12,4) Group[2]=(12,1) Group[3]=(14,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("((\\3|b)\\2(a)){2,}" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("bbaababbabaaaaabbaaaabba" : stdgo.GoString), ("Pass. Group[0]=(15,9) Group[1]=(15,3)(18,3)(21,3) Group[2]=(15,1)(18,1)(21,1) Group[3]=(17,1)(20,1)(23,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abc" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ABC" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abc" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("XBC" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abc" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("AXC" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abc" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ABX" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abc" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("XABCY" : stdgo.GoString), ("Pass. Group[0]=(1,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abc" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ABABC" : stdgo.GoString), ("Pass. Group[0]=(2,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab*c" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ABC" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab*bc" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ABC" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab*bc" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ABBC" : stdgo.GoString), ("Pass. Group[0]=(0,4)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab*?bc" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ABBBBC" : stdgo.GoString), ("Pass. Group[0]=(0,6)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab{0,}?bc" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ABBBBC" : stdgo.GoString), ("Pass. Group[0]=(0,6)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab+?bc" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ABBC" : stdgo.GoString), ("Pass. Group[0]=(0,4)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab+bc" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ABC" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab+bc" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ABQ" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab{1,}bc" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ABQ" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab+bc" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ABBBBC" : stdgo.GoString), ("Pass. Group[0]=(0,6)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab{1,}?bc" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ABBBBC" : stdgo.GoString), ("Pass. Group[0]=(0,6)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab{1,3}?bc" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ABBBBC" : stdgo.GoString), ("Pass. Group[0]=(0,6)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab{3,4}?bc" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ABBBBC" : stdgo.GoString), ("Pass. Group[0]=(0,6)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab{4,5}?bc" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ABBBBC" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab??bc" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ABBC" : stdgo.GoString), ("Pass. Group[0]=(0,4)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab??bc" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ABC" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab{0,1}?bc" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ABC" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab??bc" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ABBBBC" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab??c" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ABC" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab{0,1}?c" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ABC" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^abc$" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ABC" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^abc$" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ABCC" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^abc" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ABCC" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^abc$" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("AABC" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abc$" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("AABC" : stdgo.GoString), ("Pass. Group[0]=(1,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ABC" : stdgo.GoString), ("Pass. Group[0]=(0,0)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("$" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ABC" : stdgo.GoString), ("Pass. Group[0]=(3,0)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a.c" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ABC" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a.c" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("AXC" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a.*?c" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("AXYZC" : stdgo.GoString), ("Pass. Group[0]=(0,5)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a.*c" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("AXYZD" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[bc]d" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ABC" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[bc]d" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ABD" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[b-d]e" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ABD" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[b-d]e" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ACE" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[b-d]" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("AAC" : stdgo.GoString), ("Pass. Group[0]=(1,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[-b]" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("A-" : stdgo.GoString), ("Pass. Group[0]=(0,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[b-]" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("A-" : stdgo.GoString), ("Pass. Group[0]=(0,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[b-a]" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-" : stdgo.GoString), ("Error." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[]b" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-" : stdgo.GoString), ("Error." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-" : stdgo.GoString), ("Error." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a]" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("A]" : stdgo.GoString), ("Pass. Group[0]=(0,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[]]b" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("A]B" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[^bc]d" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("AED" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[^bc]d" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ABD" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[^-b]c" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ADC" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[^-b]c" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("A-C" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[^]b]c" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("A]C" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[^]b]c" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ADC" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab|cd" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ABC" : stdgo.GoString), ("Pass. Group[0]=(0,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab|cd" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ABCD" : stdgo.GoString), ("Pass. Group[0]=(0,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("()ef" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("DEF" : stdgo.GoString), ("Pass. Group[0]=(1,2) Group[1]=(1,0)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("*a" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-" : stdgo.GoString), ("Error." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(*)b" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-" : stdgo.GoString), ("Error." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("$b" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("B" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a\\" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-" : stdgo.GoString), ("Error." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a\\(b" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("A(B" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a\\(*b" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("AB" : stdgo.GoString), ("Pass. Group[0]=(0,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a\\(*b" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("A((B" : stdgo.GoString), ("Pass. Group[0]=(0,4)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a\\\\b" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("A\\B" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abc)" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-" : stdgo.GoString), ("Error." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(abc" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-" : stdgo.GoString), ("Error." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("((a))" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ABC" : stdgo.GoString), ("Pass. Group[0]=(0,1) Group[1]=(0,1) Group[2]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(a)b(c)" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ABC" : stdgo.GoString), ("Pass. Group[0]=(0,3) Group[1]=(0,1) Group[2]=(2,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a+b+c" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("AABBABC" : stdgo.GoString), ("Pass. Group[0]=(4,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a{1,}b{1,}c" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("AABBABC" : stdgo.GoString), ("Pass. Group[0]=(4,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a**" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-" : stdgo.GoString), ("Error." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a.+?c" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ABCABC" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a.*?c" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ABCABC" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a.{0,5}?c" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ABCABC" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(a+|b)*" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("AB" : stdgo.GoString), ("Pass. Group[0]=(0,2) Group[1]=(0,1)(1,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(a+|b){0,}" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("AB" : stdgo.GoString), ("Pass. Group[0]=(0,2) Group[1]=(0,1)(1,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(a+|b)+" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("AB" : stdgo.GoString), ("Pass. Group[0]=(0,2) Group[1]=(0,1)(1,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(a+|b){1,}" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("AB" : stdgo.GoString), ("Pass. Group[0]=(0,2) Group[1]=(0,1)(1,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(a+|b)?" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("AB" : stdgo.GoString), ("Pass. Group[0]=(0,1) Group[1]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(a+|b){0,1}" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("AB" : stdgo.GoString), ("Pass. Group[0]=(0,1) Group[1]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(a+|b){0,1}?" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("AB" : stdgo.GoString), ("Pass. Group[0]=(0,0) Group[1]=" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, (")(" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-" : stdgo.GoString), ("Error." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("[^ab]*" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("CDE" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abc" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), (stdgo.Go.str() : stdgo.GoString)?.__copy__(), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a*" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), (stdgo.Go.str() : stdgo.GoString)?.__copy__(), ("Pass. Group[0]=(0,0)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("([abc])*d" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ABBBCD" : stdgo.GoString), ("Pass. Group[0]=(0,6) Group[1]=(0,1)(1,1)(2,1)(3,1)(4,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("([abc])*bcd" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ABCD" : stdgo.GoString), ("Pass. Group[0]=(0,4) Group[1]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a|b|c|d|e" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("E" : stdgo.GoString), ("Pass. Group[0]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(a|b|c|d|e)f" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("EF" : stdgo.GoString), ("Pass. Group[0]=(0,2) Group[1]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abcd*efg" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ABCDEFG" : stdgo.GoString), ("Pass. Group[0]=(0,7)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab*" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("XABYABBBZ" : stdgo.GoString), ("Pass. Group[0]=(1,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab*" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("XAYABBBZ" : stdgo.GoString), ("Pass. Group[0]=(1,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(ab|cd)e" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ABCDE" : stdgo.GoString), ("Pass. Group[0]=(2,3) Group[1]=(2,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("[abhgefdc]ij" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("HIJ" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^(ab|cd)e" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ABCDE" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(abc|)ef" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ABCDEF" : stdgo.GoString), ("Pass. Group[0]=(4,2) Group[1]=(4,0)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(a|b)c*d" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ABCD" : stdgo.GoString), ("Pass. Group[0]=(1,3) Group[1]=(1,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(ab|ab*)bc" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ABC" : stdgo.GoString), ("Pass. Group[0]=(0,3) Group[1]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a([bc]*)c*" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ABC" : stdgo.GoString), ("Pass. Group[0]=(0,3) Group[1]=(1,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a([bc]*)(c*d)" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ABCD" : stdgo.GoString), ("Pass. Group[0]=(0,4) Group[1]=(1,2) Group[2]=(3,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a([bc]+)(c*d)" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ABCD" : stdgo.GoString), ("Pass. Group[0]=(0,4) Group[1]=(1,2) Group[2]=(3,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a([bc]*)(c+d)" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ABCD" : stdgo.GoString), ("Pass. Group[0]=(0,4) Group[1]=(1,1) Group[2]=(2,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[bcd]*dcdcde" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ADCDCDE" : stdgo.GoString), ("Pass. Group[0]=(0,7)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[bcd]+dcdcde" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ADCDCDE" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(ab|a)b*c" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ABC" : stdgo.GoString), ("Pass. Group[0]=(0,3) Group[1]=(0,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("((a)(b)c)(d)" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ABCD" : stdgo.GoString), ("Pass. Group[0]=(0,4) Group[1]=(0,3) Group[2]=(0,1) Group[3]=(1,1) Group[4]=(3,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("[a-zA-Z_][a-zA-Z0-9_]*" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ALPHA" : stdgo.GoString), ("Pass. Group[0]=(0,5)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^a(bc+|b[eh])g|.h$" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ABH" : stdgo.GoString), ("Pass. Group[0]=(1,2) Group[1]=" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(bc+d$|ef*g.|h?i(j|k))" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("EFFGZ" : stdgo.GoString), ("Pass. Group[0]=(0,5) Group[1]=(0,5) Group[2]=" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(bc+d$|ef*g.|h?i(j|k))" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("IJ" : stdgo.GoString), ("Pass. Group[0]=(0,2) Group[1]=(0,2) Group[2]=(1,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(bc+d$|ef*g.|h?i(j|k))" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("EFFG" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(bc+d$|ef*g.|h?i(j|k))" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("BCDD" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(bc+d$|ef*g.|h?i(j|k))" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("REFFGZ" : stdgo.GoString), ("Pass. Group[0]=(1,5) Group[1]=(1,5) Group[2]=" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("((((((((((a))))))))))" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("A" : stdgo.GoString), ("Pass. Group[0]=(0,1) Group[1]=(0,1) Group[2]=(0,1) Group[3]=(0,1) Group[4]=(0,1) Group[5]=(0,1) Group[6]=(0,1) Group[7]=(0,1) Group[8]=(0,1) Group[9]=(0,1) Group[10]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("((((((((((a))))))))))\\10" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("AA" : stdgo.GoString), ("Pass. Group[0]=(0,2) Group[1]=(0,1) Group[2]=(0,1) Group[3]=(0,1) Group[4]=(0,1) Group[5]=(0,1) Group[6]=(0,1) Group[7]=(0,1) Group[8]=(0,1) Group[9]=(0,1) Group[10]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("((((((((((a))))))))))!" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("AA" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("((((((((((a))))))))))!" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("A!" : stdgo.GoString), ("Pass. Group[0]=(0,2) Group[1]=(0,1) Group[2]=(0,1) Group[3]=(0,1) Group[4]=(0,1) Group[5]=(0,1) Group[6]=(0,1) Group[7]=(0,1) Group[8]=(0,1) Group[9]=(0,1) Group[10]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(((((((((a)))))))))" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("A" : stdgo.GoString), ("Pass. Group[0]=(0,1) Group[1]=(0,1) Group[2]=(0,1) Group[3]=(0,1) Group[4]=(0,1) Group[5]=(0,1) Group[6]=(0,1) Group[7]=(0,1) Group[8]=(0,1) Group[9]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(?:(?:(?:(?:(?:(?:(?:(?:(?:(a))))))))))" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("A" : stdgo.GoString), ("Pass. Group[0]=(0,1) Group[1]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(?:(?:(?:(?:(?:(?:(?:(?:(?:(a|b|c))))))))))" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("C" : stdgo.GoString), ("Pass. Group[0]=(0,1) Group[1]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("multiple words of text" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("UH-UH" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("multiple words" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("MULTIPLE WORDS, YEAH" : stdgo.GoString), ("Pass. Group[0]=(0,14)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(.*)c(.*)" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ABCDE" : stdgo.GoString), ("Pass. Group[0]=(0,5) Group[1]=(0,2) Group[2]=(3,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\((.*), (.*)\\)" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("(A, B)" : stdgo.GoString), ("Pass. Group[0]=(0,6) Group[1]=(1,1) Group[2]=(4,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("[k]" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("AB" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abcd" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ABCD" : stdgo.GoString), ("Pass. Group[0]=(0,4)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a(bc)d" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ABCD" : stdgo.GoString), ("Pass. Group[0]=(0,4) Group[1]=(1,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[-]?c" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("AC" : stdgo.GoString), ("Pass. Group[0]=(0,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(abc)\\1" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ABCABC" : stdgo.GoString), ("Pass. Group[0]=(0,6) Group[1]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("([a-c]*)\\1" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ABCABC" : stdgo.GoString), ("Pass. Group[0]=(0,6) Group[1]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a(?!b)." : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abad" : stdgo.GoString), ("Pass. Group[0]=(2,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a(?=d)." : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abad" : stdgo.GoString), ("Pass. Group[0]=(2,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a(?=c|d)." : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abad" : stdgo.GoString), ("Pass. Group[0]=(2,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a(?:b|c|d)(.)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ace" : stdgo.GoString), ("Pass. Group[0]=(0,3) Group[1]=(2,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a(?:b|c|d)*(.)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ace" : stdgo.GoString), ("Pass. Group[0]=(0,3) Group[1]=(2,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a(?:b|c|d)+?(.)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ace" : stdgo.GoString), ("Pass. Group[0]=(0,3) Group[1]=(2,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a(?:b|c|d)+?(.)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("acdbcdbe" : stdgo.GoString), ("Pass. Group[0]=(0,3) Group[1]=(2,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a(?:b|c|d)+(.)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("acdbcdbe" : stdgo.GoString), ("Pass. Group[0]=(0,8) Group[1]=(7,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a(?:b|c|d){2}(.)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("acdbcdbe" : stdgo.GoString), ("Pass. Group[0]=(0,4) Group[1]=(3,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a(?:b|c|d){4,5}(.)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("acdbcdbe" : stdgo.GoString), ("Pass. Group[0]=(0,7) Group[1]=(6,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a(?:b|c|d){4,5}?(.)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("acdbcdbe" : stdgo.GoString), ("Pass. Group[0]=(0,6) Group[1]=(5,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("((foo)|(bar))*" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("foobar" : stdgo.GoString), ("Pass. Group[0]=(0,6) Group[1]=(0,3)(3,3) Group[2]=(0,3) Group[3]=(3,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, (":(?:" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-" : stdgo.GoString), ("Error." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a(?:b|c|d){6,7}(.)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("acdbcdbe" : stdgo.GoString), ("Pass. Group[0]=(0,8) Group[1]=(7,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a(?:b|c|d){6,7}?(.)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("acdbcdbe" : stdgo.GoString), ("Pass. Group[0]=(0,8) Group[1]=(7,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a(?:b|c|d){5,6}(.)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("acdbcdbe" : stdgo.GoString), ("Pass. Group[0]=(0,8) Group[1]=(7,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a(?:b|c|d){5,6}?(.)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("acdbcdbe" : stdgo.GoString), ("Pass. Group[0]=(0,7) Group[1]=(6,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a(?:b|c|d){5,7}(.)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("acdbcdbe" : stdgo.GoString), ("Pass. Group[0]=(0,8) Group[1]=(7,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a(?:b|c|d){5,7}?(.)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("acdbcdbe" : stdgo.GoString), ("Pass. Group[0]=(0,7) Group[1]=(6,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a(?:b|(c|e){1,2}?|d)+?(.)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ace" : stdgo.GoString), ("Pass. Group[0]=(0,3) Group[1]=(1,1) Group[2]=(2,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^(.+)?B" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("AB" : stdgo.GoString), ("Pass. Group[0]=(0,2) Group[1]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^([^a-z])|(\\^)$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("." : stdgo.GoString), ("Pass. Group[0]=(0,1) Group[1]=(0,1) Group[2]=" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^[<>]&" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("<&OUT" : stdgo.GoString), ("Pass. Group[0]=(0,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^(a\\1?){4}$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aaaaaaaaaa" : stdgo.GoString), ("Pass. Group[0]=(0,10) Group[1]=(0,1)(1,2)(3,3)(6,4)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^(a\\1?){4}$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aaaaaaaaa" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^(a\\1?){4}$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aaaaaaaaaaa" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^(a(?(1)\\1)){4}$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aaaaaaaaaa" : stdgo.GoString), ("Pass. Group[0]=(0,10) Group[1]=(0,1)(1,2)(3,3)(6,4)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^(a(?(1)\\1)){4}$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aaaaaaaaa" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^(a(?(1)\\1)){4}$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aaaaaaaaaaa" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("((a{4})+)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aaaaaaaaa" : stdgo.GoString), ("Pass. Group[0]=(0,8) Group[1]=(0,8) Group[2]=(0,4)(4,4)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(((aa){2})+)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aaaaaaaaaa" : stdgo.GoString), ("Pass. Group[0]=(0,8) Group[1]=(0,8) Group[2]=(0,4)(4,4) Group[3]=(0,2)(2,2)(4,2)(6,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(((a{2}){2})+)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aaaaaaaaaa" : stdgo.GoString), ("Pass. Group[0]=(0,8) Group[1]=(0,8) Group[2]=(0,4)(4,4) Group[3]=(0,2)(2,2)(4,2)(6,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(?:(f)(o)(o)|(b)(a)(r))*" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("foobar" : stdgo.GoString), ("Pass. Group[0]=(0,6) Group[1]=(0,1) Group[2]=(1,1) Group[3]=(2,1) Group[4]=(3,1) Group[5]=(4,1) Group[6]=(5,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(?<=a)b" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ab" : stdgo.GoString), ("Pass. Group[0]=(1,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(?<=a)b" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("cb" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(?<=a)b" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(?<!c)b" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ab" : stdgo.GoString), ("Pass. Group[0]=(1,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(?<!c)b" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("cb" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(?<!c)b" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b" : stdgo.GoString), ("Pass. Group[0]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(?<!c)b" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b" : stdgo.GoString), ("Pass. Group[0]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(?<%)b" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-" : stdgo.GoString), ("Error." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(?:..)*a" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aba" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(?:..)*?a" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aba" : stdgo.GoString), ("Pass. Group[0]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^(?:b|a(?=(.)))*\\1" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abc" : stdgo.GoString), ("Pass. Group[0]=(0,2) Group[1]=(1,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^(){3,5}" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abc" : stdgo.GoString), ("Pass. Group[0]=(0,0) Group[1]=(0,0)(0,0)(0,0)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^(a+)*ax" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aax" : stdgo.GoString), ("Pass. Group[0]=(0,3) Group[1]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^((a|b)+)*ax" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aax" : stdgo.GoString), ("Pass. Group[0]=(0,3) Group[1]=(0,1) Group[2]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^((a|bc)+)*ax" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aax" : stdgo.GoString), ("Pass. Group[0]=(0,3) Group[1]=(0,1) Group[2]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(a|x)*ab" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("cab" : stdgo.GoString), ("Pass. Group[0]=(1,2) Group[1]=" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(a)*ab" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("cab" : stdgo.GoString), ("Pass. Group[0]=(1,2) Group[1]=" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(?:(?i)a)b" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ab" : stdgo.GoString), ("Pass. Group[0]=(0,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("((?i)a)b" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ab" : stdgo.GoString), ("Pass. Group[0]=(0,2) Group[1]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(?:(?i)a)b" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("Ab" : stdgo.GoString), ("Pass. Group[0]=(0,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("((?i)a)b" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("Ab" : stdgo.GoString), ("Pass. Group[0]=(0,2) Group[1]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(?:(?i)a)b" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aB" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("((?i)a)b" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aB" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(?i:a)b" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ab" : stdgo.GoString), ("Pass. Group[0]=(0,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("((?i:a))b" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ab" : stdgo.GoString), ("Pass. Group[0]=(0,2) Group[1]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(?i:a)b" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("Ab" : stdgo.GoString), ("Pass. Group[0]=(0,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("((?i:a))b" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("Ab" : stdgo.GoString), ("Pass. Group[0]=(0,2) Group[1]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(?i:a)b" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aB" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("((?i:a))b" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aB" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(?:(?-i)a)b" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ab" : stdgo.GoString), ("Pass. Group[0]=(0,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("((?-i)a)b" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ab" : stdgo.GoString), ("Pass. Group[0]=(0,2) Group[1]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(?:(?-i)a)b" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aB" : stdgo.GoString), ("Pass. Group[0]=(0,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("((?-i)a)b" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aB" : stdgo.GoString), ("Pass. Group[0]=(0,2) Group[1]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(?:(?-i)a)b" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("Ab" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("((?-i)a)b" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("Ab" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(?:(?-i)a)b" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aB" : stdgo.GoString), ("Pass. Group[0]=(0,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("((?-i)a)b" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aB" : stdgo.GoString), ("Pass. Group[0]=(0,2) Group[1]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(?:(?-i)a)b" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("AB" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("((?-i)a)b" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("AB" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(?-i:a)b" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ab" : stdgo.GoString), ("Pass. Group[0]=(0,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("((?-i:a))b" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ab" : stdgo.GoString), ("Pass. Group[0]=(0,2) Group[1]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(?-i:a)b" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aB" : stdgo.GoString), ("Pass. Group[0]=(0,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("((?-i:a))b" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aB" : stdgo.GoString), ("Pass. Group[0]=(0,2) Group[1]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(?-i:a)b" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("Ab" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("((?-i:a))b" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("Ab" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(?-i:a)b" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aB" : stdgo.GoString), ("Pass. Group[0]=(0,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("((?-i:a))b" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aB" : stdgo.GoString), ("Pass. Group[0]=(0,2) Group[1]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(?-i:a)b" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("AB" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("((?-i:a))b" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("AB" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("((?-i:a.))b" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a\nB" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("((?s-i:a.))b" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a\nB" : stdgo.GoString), ("Pass. Group[0]=(0,3) Group[1]=(0,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("((?s-i:a.))b" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("B\nB" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(?:c|d)(?:)(?:a(?:)(?:b)(?:b(?:))(?:b(?:)(?:b)))" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("cabbbb" : stdgo.GoString), ("Pass. Group[0]=(0,6)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(?:c|d)(?:)(?:aaaaaaaa(?:)(?:bbbbbbbb)(?:bbbbbbbb(?:))(?:bbbbbbbb(?:)(?:bbbbbbbb)))" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("caaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb" : stdgo.GoString), ("Pass. Group[0]=(0,41)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(ab)\\d\\1" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("Ab4ab" : stdgo.GoString), ("Pass. Group[0]=(0,5) Group[1]=(0,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(ab)\\d\\1" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ab4Ab" : stdgo.GoString), ("Pass. Group[0]=(0,5) Group[1]=(0,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("foo\\w*\\d{4}baz" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("foobar1234baz" : stdgo.GoString), ("Pass. Group[0]=(0,13)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("x(~~)*(?:(?:F)?)?" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("x~~" : stdgo.GoString), ("Pass. Group[0]=(0,3) Group[1]=(1,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^a(?#xxx){3}c" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aaac" : stdgo.GoString), ("Pass. Group[0]=(0,4)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(?<![cd])b" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("dbcb" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(?<![cd])[ab]" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("dbaacb" : stdgo.GoString), ("Pass. Group[0]=(2,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(?<!(c|d))b" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("dbcb" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(?<!(c|d))[ab]" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("dbaacb" : stdgo.GoString), ("Pass. Group[0]=(2,1) Group[1]=" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(?<!cd)[ab]" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("cdaccb" : stdgo.GoString), ("Pass. Group[0]=(5,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^(?:a?b?)*$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a--" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("((?s)^a(.))((?m)^b$)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a\nb\nc\n" : stdgo.GoString), ("Pass. Group[0]=(0,3) Group[1]=(0,2) Group[2]=(1,1) Group[3]=(2,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("((?m)^b$)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a\nb\nc\n" : stdgo.GoString), ("Pass. Group[0]=(2,1) Group[1]=(2,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(?m)^b" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a\nb\n" : stdgo.GoString), ("Pass. Group[0]=(2,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(?m)^(b)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a\nb\n" : stdgo.GoString), ("Pass. Group[0]=(2,1) Group[1]=(2,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("((?m)^b)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a\nb\n" : stdgo.GoString), ("Pass. Group[0]=(2,1) Group[1]=(2,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\n((?m)^b)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a\nb\n" : stdgo.GoString), ("Pass. Group[0]=(1,2) Group[1]=(2,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("((?s).)c(?!.)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a\nb\nc\n" : stdgo.GoString), ("Pass. Group[0]=(3,2) Group[1]=(3,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("((?s).)c(?!.)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a\nb\nc\n" : stdgo.GoString), ("Pass. Group[0]=(3,2) Group[1]=(3,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("((?s)b.)c(?!.)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a\nb\nc\n" : stdgo.GoString), ("Pass. Group[0]=(2,3) Group[1]=(2,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("((?s)b.)c(?!.)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a\nb\nc\n" : stdgo.GoString), ("Pass. Group[0]=(2,3) Group[1]=(2,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^b" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a\nb\nc\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("()^b" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a\nb\nc\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("((?m)^b)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a\nb\nc\n" : stdgo.GoString), ("Pass. Group[0]=(2,1) Group[1]=(2,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(x)?(?(1)a|b)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(x)?(?(1)b|a)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a" : stdgo.GoString), ("Pass. Group[0]=(0,1) Group[1]=" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("()?(?(1)b|a)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a" : stdgo.GoString), ("Pass. Group[0]=(0,1) Group[1]=" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("()(?(1)b|a)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("()?(?(1)a|b)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a" : stdgo.GoString), ("Pass. Group[0]=(0,1) Group[1]=(0,0)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^(\\()?blah(?(1)(\\)))$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("(blah)" : stdgo.GoString), ("Pass. Group[0]=(0,6) Group[1]=(0,1) Group[2]=(5,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^(\\()?blah(?(1)(\\)))$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("blah" : stdgo.GoString), ("Pass. Group[0]=(0,4) Group[1]= Group[2]=" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^(\\()?blah(?(1)(\\)))$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("blah)" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^(\\()?blah(?(1)(\\)))$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("(blah" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^(\\(+)?blah(?(1)(\\)))$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("(blah)" : stdgo.GoString), ("Pass. Group[0]=(0,6) Group[1]=(0,1) Group[2]=(5,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^(\\(+)?blah(?(1)(\\)))$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("blah" : stdgo.GoString), ("Pass. Group[0]=(0,4) Group[1]= Group[2]=" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^(\\(+)?blah(?(1)(\\)))$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("blah)" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^(\\(+)?blah(?(1)(\\)))$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("(blah" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(?(1)a|b|c)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a" : stdgo.GoString), ("Error." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(?(?!a)a|b)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(?(?!a)b|a)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a" : stdgo.GoString), ("Pass. Group[0]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(?(?=a)b|a)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(?(?=a)a|b)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a" : stdgo.GoString), ("Pass. Group[0]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(?=(a+?))(\\1ab)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aaab" : stdgo.GoString), ("Pass. Group[0]=(1,3) Group[1]=(1,1) Group[2]=(1,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^(?=(a+?))\\1ab" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aaab" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(\\w+:)+" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("one:" : stdgo.GoString), ("Pass. Group[0]=(0,4) Group[1]=(0,4)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("$(?<=^(a))" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a" : stdgo.GoString), ("Pass. Group[0]=(1,0) Group[1]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(?=(a+?))(\\1ab)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aaab" : stdgo.GoString), ("Pass. Group[0]=(1,3) Group[1]=(1,1) Group[2]=(1,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^(?=(a+?))\\1ab" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aaab" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("([\\w:]+::)?(\\w+)$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abcd:" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("([\\w:]+::)?(\\w+)$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abcd" : stdgo.GoString), ("Pass. Group[0]=(0,4) Group[1]= Group[2]=(0,4)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("([\\w:]+::)?(\\w+)$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("xy:z:::abcd" : stdgo.GoString), ("Pass. Group[0]=(0,11) Group[1]=(0,7) Group[2]=(7,4)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^[^bcd]*(c+)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aexycd" : stdgo.GoString), ("Pass. Group[0]=(0,5) Group[1]=(4,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(a*)b+" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("caab" : stdgo.GoString), ("Pass. Group[0]=(1,3) Group[1]=(1,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("([\\w:]+::)?(\\w+)$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abcd:" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("([\\w:]+::)?(\\w+)$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abcd" : stdgo.GoString), ("Pass. Group[0]=(0,4) Group[1]= Group[2]=(0,4)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("([\\w:]+::)?(\\w+)$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("xy:z:::abcd" : stdgo.GoString), ("Pass. Group[0]=(0,11) Group[1]=(0,7) Group[2]=(7,4)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^[^bcd]*(c+)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aexycd" : stdgo.GoString), ("Pass. Group[0]=(0,5) Group[1]=(4,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(>a+)ab" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aaab" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(?>a+)b" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aaab" : stdgo.GoString), ("Pass. Group[0]=(0,4)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("([[:]+)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a:[b]:" : stdgo.GoString), ("Pass. Group[0]=(1,2) Group[1]=(1,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("([[=]+)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a=[b]=" : stdgo.GoString), ("Pass. Group[0]=(1,2) Group[1]=(1,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("([[.]+)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a.[b]." : stdgo.GoString), ("Pass. Group[0]=(1,2) Group[1]=(1,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("[a[:]b[:c]" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abc" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("[a[:]b[:c]" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abc" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("((?>a+)b)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aaab" : stdgo.GoString), ("Pass. Group[0]=(0,4) Group[1]=(0,4)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(?>(a+))b" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aaab" : stdgo.GoString), ("Pass. Group[0]=(0,4) Group[1]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("((?>[^()]+)|\\([^()]*\\))+" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("((abc(ade)ufh()()x" : stdgo.GoString), ("Pass. Group[0]=(2,16) Group[1]=(2,3)(5,5)(10,3)(13,2)(15,2)(17,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(?<=x+)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("xxxxy" : stdgo.GoString), ("Pass. Group[0]=(1,0)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a{37,17}" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-" : stdgo.GoString), ("Error." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\Z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a\nb\n" : stdgo.GoString), ("Pass. Group[0]=(3,0)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a\nb\n" : stdgo.GoString), ("Pass. Group[0]=(4,0)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a\nb\n" : stdgo.GoString), ("Pass. Group[0]=(3,0)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\Z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\na\n" : stdgo.GoString), ("Pass. Group[0]=(3,0)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\na\n" : stdgo.GoString), ("Pass. Group[0]=(4,0)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\na\n" : stdgo.GoString), ("Pass. Group[0]=(3,0)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\Z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\na" : stdgo.GoString), ("Pass. Group[0]=(3,0)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\na" : stdgo.GoString), ("Pass. Group[0]=(3,0)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\na" : stdgo.GoString), ("Pass. Group[0]=(3,0)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\Z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a\nb\n" : stdgo.GoString), ("Pass. Group[0]=(3,0)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a\nb\n" : stdgo.GoString), ("Pass. Group[0]=(4,0)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("$" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a\nb\n" : stdgo.GoString), ("Pass. Group[0]=(1,0)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\Z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\na\n" : stdgo.GoString), ("Pass. Group[0]=(3,0)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\na\n" : stdgo.GoString), ("Pass. Group[0]=(4,0)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("$" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\na\n" : stdgo.GoString), ("Pass. Group[0]=(1,0)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\Z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\na" : stdgo.GoString), ("Pass. Group[0]=(3,0)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\na" : stdgo.GoString), ("Pass. Group[0]=(3,0)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("$" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\na" : stdgo.GoString), ("Pass. Group[0]=(1,0)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a\\Z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a\nb\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a\\z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a\nb\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a\nb\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a\\Z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\na\n" : stdgo.GoString), ("Pass. Group[0]=(2,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a\\z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\na\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\na\n" : stdgo.GoString), ("Pass. Group[0]=(2,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a\\Z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\na" : stdgo.GoString), ("Pass. Group[0]=(2,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a\\z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\na" : stdgo.GoString), ("Pass. Group[0]=(2,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\na" : stdgo.GoString), ("Pass. Group[0]=(2,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a\\z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a\nb\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a$" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a\nb\n" : stdgo.GoString), ("Pass. Group[0]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a\\Z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\na\n" : stdgo.GoString), ("Pass. Group[0]=(2,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a\\z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\na\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a$" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\na\n" : stdgo.GoString), ("Pass. Group[0]=(2,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a\\Z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\na" : stdgo.GoString), ("Pass. Group[0]=(2,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a\\z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\na" : stdgo.GoString), ("Pass. Group[0]=(2,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a$" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\na" : stdgo.GoString), ("Pass. Group[0]=(2,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("aa\\Z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aa\nb\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("aa\\z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aa\nb\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("aa$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aa\nb\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("aa\\Z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\naa\n" : stdgo.GoString), ("Pass. Group[0]=(2,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("aa\\z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\naa\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("aa$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\naa\n" : stdgo.GoString), ("Pass. Group[0]=(2,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("aa\\Z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\naa" : stdgo.GoString), ("Pass. Group[0]=(2,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("aa\\z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\naa" : stdgo.GoString), ("Pass. Group[0]=(2,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("aa$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\naa" : stdgo.GoString), ("Pass. Group[0]=(2,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("aa\\z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aa\nb\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("aa$" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aa\nb\n" : stdgo.GoString), ("Pass. Group[0]=(0,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("aa\\Z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\naa\n" : stdgo.GoString), ("Pass. Group[0]=(2,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("aa\\z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\naa\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("aa$" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\naa\n" : stdgo.GoString), ("Pass. Group[0]=(2,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("aa\\Z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\naa" : stdgo.GoString), ("Pass. Group[0]=(2,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("aa\\z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\naa" : stdgo.GoString), ("Pass. Group[0]=(2,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("aa$" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\naa" : stdgo.GoString), ("Pass. Group[0]=(2,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("aa\\Z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ac\nb\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("aa\\z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ac\nb\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("aa$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ac\nb\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("aa\\Z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nac\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("aa\\z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nac\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("aa$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nac\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("aa\\Z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nac" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("aa\\z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nac" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("aa$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nac" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("aa\\Z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ac\nb\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("aa\\z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ac\nb\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("aa$" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ac\nb\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("aa\\Z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nac\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("aa\\z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nac\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("aa$" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nac\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("aa\\Z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nac" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("aa\\z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nac" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("aa$" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nac" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("aa\\Z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ca\nb\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("aa\\z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ca\nb\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("aa$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ca\nb\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("aa\\Z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nca\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("aa\\z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nca\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("aa$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nca\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("aa\\Z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nca" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("aa\\z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nca" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("aa$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nca" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("aa\\Z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ca\nb\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("aa\\z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ca\nb\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("aa$" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ca\nb\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("aa\\Z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nca\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("aa\\z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nca\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("aa$" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nca\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("aa\\Z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nca" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("aa\\z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nca" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("aa$" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nca" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab\\Z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ab\nb\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab\\z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ab\nb\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ab\nb\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab\\Z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nab\n" : stdgo.GoString), ("Pass. Group[0]=(2,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab\\z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nab\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nab\n" : stdgo.GoString), ("Pass. Group[0]=(2,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab\\Z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nab" : stdgo.GoString), ("Pass. Group[0]=(2,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab\\z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nab" : stdgo.GoString), ("Pass. Group[0]=(2,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nab" : stdgo.GoString), ("Pass. Group[0]=(2,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab\\z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ab\nb\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab$" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ab\nb\n" : stdgo.GoString), ("Pass. Group[0]=(0,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab\\Z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nab\n" : stdgo.GoString), ("Pass. Group[0]=(2,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab\\z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nab\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab$" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nab\n" : stdgo.GoString), ("Pass. Group[0]=(2,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab\\Z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nab" : stdgo.GoString), ("Pass. Group[0]=(2,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab\\z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nab" : stdgo.GoString), ("Pass. Group[0]=(2,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab$" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nab" : stdgo.GoString), ("Pass. Group[0]=(2,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab\\Z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ac\nb\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab\\z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ac\nb\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ac\nb\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab\\Z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nac\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab\\z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nac\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nac\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab\\Z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nac" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab\\z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nac" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nac" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab\\Z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ac\nb\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab\\z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ac\nb\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab$" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ac\nb\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab\\Z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nac\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab\\z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nac\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab$" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nac\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab\\Z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nac" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab\\z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nac" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab$" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nac" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab\\Z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ca\nb\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab\\z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ca\nb\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ca\nb\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab\\Z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nca\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab\\z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nca\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nca\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab\\Z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nca" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab\\z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nca" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nca" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab\\Z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ca\nb\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab\\z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ca\nb\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab$" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ca\nb\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab\\Z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nca\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab\\z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nca\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab$" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nca\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab\\Z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nca" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab\\z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nca" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab$" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nca" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abb\\Z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abb\nb\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abb\\z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abb\nb\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abb$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abb\nb\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abb\\Z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nabb\n" : stdgo.GoString), ("Pass. Group[0]=(2,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abb\\z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nabb\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abb$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nabb\n" : stdgo.GoString), ("Pass. Group[0]=(2,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abb\\Z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nabb" : stdgo.GoString), ("Pass. Group[0]=(2,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abb\\z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nabb" : stdgo.GoString), ("Pass. Group[0]=(2,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abb$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nabb" : stdgo.GoString), ("Pass. Group[0]=(2,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abb\\z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abb\nb\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abb$" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abb\nb\n" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abb\\Z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nabb\n" : stdgo.GoString), ("Pass. Group[0]=(2,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abb\\z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nabb\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abb$" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nabb\n" : stdgo.GoString), ("Pass. Group[0]=(2,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abb\\Z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nabb" : stdgo.GoString), ("Pass. Group[0]=(2,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abb\\z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nabb" : stdgo.GoString), ("Pass. Group[0]=(2,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abb$" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nabb" : stdgo.GoString), ("Pass. Group[0]=(2,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abb\\Z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ac\nb\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abb\\z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ac\nb\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abb$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ac\nb\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abb\\Z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nac\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abb\\z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nac\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abb$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nac\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abb\\Z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nac" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abb\\z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nac" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abb$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nac" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abb\\Z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ac\nb\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abb\\z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ac\nb\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abb$" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ac\nb\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abb\\Z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nac\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abb\\z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nac\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abb$" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nac\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abb\\Z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nac" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abb\\z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nac" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abb$" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nac" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abb\\Z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ca\nb\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abb\\z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ca\nb\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abb$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ca\nb\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abb\\Z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nca\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abb\\z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nca\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abb$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nca\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abb\\Z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nca" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abb\\z" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nca" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abb$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nca" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abb\\Z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ca\nb\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abb\\z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ca\nb\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abb$" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ca\nb\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abb\\Z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nca\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abb\\z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nca\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abb$" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nca\n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abb\\Z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nca" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abb\\z" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nca" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abb$" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b\nca" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(^|x)(c)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ca" : stdgo.GoString), ("Pass. Group[0]=(0,1) Group[1]=(0,0) Group[2]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a*abc?xyz+pqr{3}ab{2,}xy{4,5}pq{0,6}AB{0,}zz" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("x" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("round\\(((?>[^()]+))\\)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("_I(round(xs * sz),1)" : stdgo.GoString), ("Pass. Group[0]=(3,14) Group[1]=(9,7)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("foo.bart" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("foo.bart" : stdgo.GoString), ("Pass. Group[0]=(0,8)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^d[x][x][x]" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abcd\ndxxx" : stdgo.GoString), ("Pass. Group[0]=(5,4)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, (".X(.+)+X" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("bbbbXcXaaaaaaaa" : stdgo.GoString), ("Pass. Group[0]=(3,4) Group[1]=(5,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, (".X(.+)+XX" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("bbbbXcXXaaaaaaaa" : stdgo.GoString), ("Pass. Group[0]=(3,5) Group[1]=(5,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, (".XX(.+)+X" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("bbbbXXcXaaaaaaaa" : stdgo.GoString), ("Pass. Group[0]=(3,5) Group[1]=(6,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, (".X(.+)+X" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("bbbbXXaaaaaaaaa" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, (".X(.+)+XX" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("bbbbXXXaaaaaaaaa" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, (".XX(.+)+X" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("bbbbXXXaaaaaaaaa" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, (".X(.+)+[X]" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("bbbbXcXaaaaaaaa" : stdgo.GoString), ("Pass. Group[0]=(3,4) Group[1]=(5,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, (".X(.+)+[X][X]" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("bbbbXcXXaaaaaaaa" : stdgo.GoString), ("Pass. Group[0]=(3,5) Group[1]=(5,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, (".XX(.+)+[X]" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("bbbbXXcXaaaaaaaa" : stdgo.GoString), ("Pass. Group[0]=(3,5) Group[1]=(6,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, (".X(.+)+[X]" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("bbbbXXaaaaaaaaa" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, (".X(.+)+[X][X]" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("bbbbXXXaaaaaaaaa" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, (".XX(.+)+[X]" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("bbbbXXXaaaaaaaaa" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, (".[X](.+)+[X]" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("bbbbXcXaaaaaaaa" : stdgo.GoString), ("Pass. Group[0]=(3,4) Group[1]=(5,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, (".[X](.+)+[X][X]" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("bbbbXcXXaaaaaaaa" : stdgo.GoString), ("Pass. Group[0]=(3,5) Group[1]=(5,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, (".[X][X](.+)+[X]" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("bbbbXXcXaaaaaaaa" : stdgo.GoString), ("Pass. Group[0]=(3,5) Group[1]=(6,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, (".[X](.+)+[X]" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("bbbbXXaaaaaaaaa" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, (".[X](.+)+[X][X]" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("bbbbXXXaaaaaaaaa" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, (".[X][X](.+)+[X]" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("bbbbXXXaaaaaaaaa" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("tt+$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("xxxtt" : stdgo.GoString), ("Pass. Group[0]=(3,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("([\\d-z]+)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a0-za" : stdgo.GoString), ("Pass. Group[0]=(1,3) Group[1]=(1,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("([\\d-\\s]+)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a0- z" : stdgo.GoString), ("Pass. Group[0]=(1,3) Group[1]=(1,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\GX.*X" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aaaXbX" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(\\d+\\.\\d+)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("3.1415926" : stdgo.GoString), ("Pass. Group[0]=(0,9) Group[1]=(0,9)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(\\ba.{0,10}br)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("have a web browser" : stdgo.GoString), ("Pass. Group[0]=(5,8) Group[1]=(5,8)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\.c(pp|xx|c)?$" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("Changes" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\.c(pp|xx|c)?$" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("IO.c" : stdgo.GoString), ("Pass. Group[0]=(2,2) Group[1]=" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(\\.c(pp|xx|c)?$)" : stdgo.GoString), (1 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("IO.c" : stdgo.GoString), ("Pass. Group[0]=(2,2) Group[1]=(2,2) Group[2]=" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^([a-z]:)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("C:/" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^\\S\\s+aa$" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("\nx aa" : stdgo.GoString), ("Pass. Group[0]=(1,4)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(^|a)b" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ab" : stdgo.GoString), ("Pass. Group[0]=(0,2) Group[1]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^([ab]*?)(b)?(c)$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abac" : stdgo.GoString), ("Pass. Group[0]=(0,4) Group[1]=(0,3) Group[2]= Group[3]=(3,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(\\w)?(abc)\\1b" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abcab" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^(?:.,){2}c" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a,b,c" : stdgo.GoString), ("Pass. Group[0]=(0,5)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^(.,){2}c" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a,b,c" : stdgo.GoString), ("Pass. Group[0]=(0,5) Group[1]=(0,2)(2,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^(?:[^,]*,){2}c" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a,b,c" : stdgo.GoString), ("Pass. Group[0]=(0,5)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^([^,]*,){2}c" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a,b,c" : stdgo.GoString), ("Pass. Group[0]=(0,5) Group[1]=(0,2)(2,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^([^,]*,){3}d" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aaa,b,c,d" : stdgo.GoString), ("Pass. Group[0]=(0,9) Group[1]=(0,4)(4,2)(6,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^([^,]*,){3,}d" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aaa,b,c,d" : stdgo.GoString), ("Pass. Group[0]=(0,9) Group[1]=(0,4)(4,2)(6,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^([^,]*,){0,3}d" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aaa,b,c,d" : stdgo.GoString), ("Pass. Group[0]=(0,9) Group[1]=(0,4)(4,2)(6,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^([^,]{1,3},){3}d" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aaa,b,c,d" : stdgo.GoString), ("Pass. Group[0]=(0,9) Group[1]=(0,4)(4,2)(6,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^([^,]{1,3},){3,}d" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aaa,b,c,d" : stdgo.GoString), ("Pass. Group[0]=(0,9) Group[1]=(0,4)(4,2)(6,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^([^,]{1,3},){0,3}d" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aaa,b,c,d" : stdgo.GoString), ("Pass. Group[0]=(0,9) Group[1]=(0,4)(4,2)(6,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^([^,]{1,},){3}d" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aaa,b,c,d" : stdgo.GoString), ("Pass. Group[0]=(0,9) Group[1]=(0,4)(4,2)(6,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^([^,]{1,},){3,}d" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aaa,b,c,d" : stdgo.GoString), ("Pass. Group[0]=(0,9) Group[1]=(0,4)(4,2)(6,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^([^,]{1,},){0,3}d" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aaa,b,c,d" : stdgo.GoString), ("Pass. Group[0]=(0,9) Group[1]=(0,4)(4,2)(6,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^([^,]{0,3},){3}d" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aaa,b,c,d" : stdgo.GoString), ("Pass. Group[0]=(0,9) Group[1]=(0,4)(4,2)(6,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^([^,]{0,3},){3,}d" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aaa,b,c,d" : stdgo.GoString), ("Pass. Group[0]=(0,9) Group[1]=(0,4)(4,2)(6,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^([^,]{0,3},){0,3}d" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aaa,b,c,d" : stdgo.GoString), ("Pass. Group[0]=(0,9) Group[1]=(0,4)(4,2)(6,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(?i)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), (stdgo.Go.str() : stdgo.GoString)?.__copy__(), ("Pass. Group[0]=(0,0)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(?!\\A)x" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a\nxb\n" : stdgo.GoString), ("Pass. Group[0]=(2,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^(a(b)?)+$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aba" : stdgo.GoString), ("Pass. Group[0]=(0,3) Group[1]=(0,2)(2,1) Group[2]=(1,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^(aa(bb)?)+$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aabbaa" : stdgo.GoString), ("Pass. Group[0]=(0,6) Group[1]=(0,4)(4,2) Group[2]=(2,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^.{9}abc.*\\n" : stdgo.GoString), (2 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("123\nabcabcabcabc\n" : stdgo.GoString), ("Pass. Group[0]=(4,13)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^(a)?a$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a" : stdgo.GoString), ("Pass. Group[0]=(0,1) Group[1]=" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^(a)?(?(1)a|b)+$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^(a\\1?)(a\\1?)(a\\2?)(a\\3?)$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aaaaaa" : stdgo.GoString), ("Pass. Group[0]=(0,6) Group[1]=(0,1) Group[2]=(1,2) Group[3]=(3,1) Group[4]=(4,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^(a\\1?){4}$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aaaaaa" : stdgo.GoString), ("Pass. Group[0]=(0,6) Group[1]=(0,1)(1,2)(3,1)(4,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^(0+)?(?:x(1))?" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("x1" : stdgo.GoString), ("Pass. Group[0]=(0,2) Group[1]= Group[2]=(1,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^([0-9a-fA-F]+)(?:x([0-9a-fA-F]+)?)(?:x([0-9a-fA-F]+))?" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("012cxx0190" : stdgo.GoString), ("Pass. Group[0]=(0,10) Group[1]=(0,4) Group[2]= Group[3]=(6,4)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^(b+?|a){1,2}c" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("bbbac" : stdgo.GoString), ("Pass. Group[0]=(0,5) Group[1]=(0,3)(3,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^(b+?|a){1,2}c" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("bbbbac" : stdgo.GoString), ("Pass. Group[0]=(0,6) Group[1]=(0,4)(4,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\((\\w\\. \\w+)\\)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("cd. (A. Tw)" : stdgo.GoString), ("Pass. Group[0]=(4,7) Group[1]=(5,5)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("((?:aaaa|bbbb)cccc)?" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aaaacccc" : stdgo.GoString), ("Pass. Group[0]=(0,8) Group[1]=(0,8)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("((?:aaaa|bbbb)cccc)?" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("bbbbcccc" : stdgo.GoString), ("Pass. Group[0]=(0,8) Group[1]=(0,8)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^(foo)|(bar)$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("foobar" : stdgo.GoString), ("Pass. Group[0]=(0,3) Group[1]=(0,3) Group[2]=" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^(foo)|(bar)$" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("foobar" : stdgo.GoString), ("Pass. Group[0]=(3,3) Group[1]= Group[2]=(3,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("b" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("babaaa" : stdgo.GoString), ("Pass. Group[0]=(2,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("bab" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("babababaa" : stdgo.GoString), ("Pass. Group[0]=(4,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abb" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abb" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("b$" : stdgo.GoString), (66 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aab\naab" : stdgo.GoString), ("Pass. Group[0]=(6,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^a" : stdgo.GoString), (66 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aab\naab" : stdgo.GoString), ("Pass. Group[0]=(4,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^aaab" : stdgo.GoString), (66 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aaab\naab" : stdgo.GoString), ("Pass. Group[0]=(0,4)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abb{2}" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abbb" : stdgo.GoString), ("Pass. Group[0]=(0,4)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abb{1,2}" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abbb" : stdgo.GoString), ("Pass. Group[0]=(0,4)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abb{1,2}" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abbbbbaaaa" : stdgo.GoString), ("Pass. Group[0]=(0,4)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\Ab" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("bab\naaa" : stdgo.GoString), ("Pass. Group[0]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\Abab$" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("bab" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("b\\Z" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("bab\naaa" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("b\\Z" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("babaaab" : stdgo.GoString), ("Pass. Group[0]=(6,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("b\\z" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("babaaa" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("b\\z" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("babaaab" : stdgo.GoString), ("Pass. Group[0]=(6,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a\\G" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("babaaa" : stdgo.GoString), ("Pass. Group[0]=(5,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\Abaaa\\G" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("baaa" : stdgo.GoString), ("Pass. Group[0]=(0,4)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\bc" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aaa c aaa c a" : stdgo.GoString), ("Pass. Group[0]=(10,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\bc" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("c aaa c" : stdgo.GoString), ("Pass. Group[0]=(6,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\bc" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aaa ac" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\bc" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("c aaa" : stdgo.GoString), ("Pass. Group[0]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\bc" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aaacaaa" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\bc" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aaac aaa" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\bc" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aaa ca caaa" : stdgo.GoString), ("Pass. Group[0]=(7,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\Bc" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ac aaa ac" : stdgo.GoString), ("Pass. Group[0]=(8,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\Bc" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aaa c" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\Bc" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ca aaa" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\Bc" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aaa c aaa" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\Bc" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), (" acaca " : stdgo.GoString), ("Pass. Group[0]=(4,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\Bc" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aaac aaac" : stdgo.GoString), ("Pass. Group[0]=(8,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\Bc" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aaa caaa" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("b(a?)b" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aabababbaaababa" : stdgo.GoString), ("Pass. Group[0]=(11,3) Group[1]=(12,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("b{4}" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abbbbaabbbbaabbb" : stdgo.GoString), ("Pass. Group[0]=(7,4)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("b\\1aa(.)" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("bBaaB" : stdgo.GoString), ("Pass. Group[0]=(0,5) Group[1]=(4,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("b(.)aa\\1" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("bBaaB" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^(a\\1?){4}$" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aaaaaa" : stdgo.GoString), ("Pass. Group[0]=(0,6) Group[1]=(5,1)(3,2)(2,1)(0,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^([0-9a-fA-F]+)(?:x([0-9a-fA-F]+)?)(?:x([0-9a-fA-F]+))?" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("012cxx0190" : stdgo.GoString), ("Pass. Group[0]=(0,10) Group[1]=(0,4) Group[2]= Group[3]=(6,4)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^(b+?|a){1,2}c" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("bbbac" : stdgo.GoString), ("Pass. Group[0]=(0,5) Group[1]=(3,1)(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\((\\w\\. \\w+)\\)" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("cd. (A. Tw)" : stdgo.GoString), ("Pass. Group[0]=(4,7) Group[1]=(5,5)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("((?:aaaa|bbbb)cccc)?" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aaaacccc" : stdgo.GoString), ("Pass. Group[0]=(0,8) Group[1]=(0,8)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("((?:aaaa|bbbb)cccc)?" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("bbbbcccc" : stdgo.GoString), ("Pass. Group[0]=(0,8) Group[1]=(0,8)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(?<=a)b" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ab" : stdgo.GoString), ("Pass. Group[0]=(1,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(?<=a)b" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("cb" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(?<=a)b" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(?<!c)b" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ab" : stdgo.GoString), ("Pass. Group[0]=(1,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(?<!c)b" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("cb" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(?<!c)b" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b" : stdgo.GoString), ("Pass. Group[0]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(?<!c)b" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b" : stdgo.GoString), ("Pass. Group[0]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a(?=d)." : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("adabad" : stdgo.GoString), ("Pass. Group[0]=(4,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a(?=c|d)." : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("adabad" : stdgo.GoString), ("Pass. Group[0]=(4,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab*c" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abc" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab*bc" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abc" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab*bc" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abbc" : stdgo.GoString), ("Pass. Group[0]=(0,4)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab*bc" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abbbbc" : stdgo.GoString), ("Pass. Group[0]=(0,6)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, (".{1}" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abbbbc" : stdgo.GoString), ("Pass. Group[0]=(5,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, (".{3,4}" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abbbbc" : stdgo.GoString), ("Pass. Group[0]=(2,4)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab{0,}bc" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abbbbc" : stdgo.GoString), ("Pass. Group[0]=(0,6)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab+bc" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abbc" : stdgo.GoString), ("Pass. Group[0]=(0,4)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab+bc" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abc" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab+bc" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abq" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab{1,}bc" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abq" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab+bc" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abbbbc" : stdgo.GoString), ("Pass. Group[0]=(0,6)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab{1,}bc" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abbbbc" : stdgo.GoString), ("Pass. Group[0]=(0,6)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab{1,3}bc" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abbbbc" : stdgo.GoString), ("Pass. Group[0]=(0,6)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab{3,4}bc" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abbbbc" : stdgo.GoString), ("Pass. Group[0]=(0,6)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab{4,5}bc" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abbbbc" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab?bc" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abbc" : stdgo.GoString), ("Pass. Group[0]=(0,4)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab?bc" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abc" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab{0,1}bc" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abc" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab?bc" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abbbbc" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab?c" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abc" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab{0,1}c" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abc" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^abc$" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abc" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^abc$" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abcc" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^abc" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abcc" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^abc$" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aabc" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abc$" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aabc" : stdgo.GoString), ("Pass. Group[0]=(1,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abc$" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aabcd" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abc" : stdgo.GoString), ("Pass. Group[0]=(0,0)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("$" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abc" : stdgo.GoString), ("Pass. Group[0]=(3,0)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a.c" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abc" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a.c" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("axc" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a.*c" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("axyzc" : stdgo.GoString), ("Pass. Group[0]=(0,5)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a.*c" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("axyzd" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[bc]d" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abc" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[bc]d" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abd" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[b-d]e" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abd" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[b-d]e" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ace" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[b-d]" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aac" : stdgo.GoString), ("Pass. Group[0]=(1,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[-b]" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a-" : stdgo.GoString), ("Pass. Group[0]=(0,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[b-]" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a-" : stdgo.GoString), ("Pass. Group[0]=(0,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[b-a]" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-" : stdgo.GoString), ("Error." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[]b" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-" : stdgo.GoString), ("Error." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-" : stdgo.GoString), ("Error." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a]" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a]" : stdgo.GoString), ("Pass. Group[0]=(0,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[]]b" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a]b" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[^bc]d" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aed" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[^bc]d" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abd" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[^-b]c" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("adc" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[^-b]c" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a-c" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[^]b]c" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a]c" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[^]b]c" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("adc" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\ba\\b" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a-" : stdgo.GoString), ("Pass. Group[0]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\ba\\b" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-a" : stdgo.GoString), ("Pass. Group[0]=(1,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\ba\\b" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-a-" : stdgo.GoString), ("Pass. Group[0]=(1,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\by\\b" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("xy" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\by\\b" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("yz" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\by\\b" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("xyz" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\Ba\\B" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a-" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\Ba\\B" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-a" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\Ba\\B" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-a-" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\By\\b" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("xy" : stdgo.GoString), ("Pass. Group[0]=(1,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\by\\B" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("yz" : stdgo.GoString), ("Pass. Group[0]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\By\\B" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("xyz" : stdgo.GoString), ("Pass. Group[0]=(1,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\w" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a" : stdgo.GoString), ("Pass. Group[0]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\w" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\W" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\W" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-" : stdgo.GoString), ("Pass. Group[0]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a\\sb" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a b" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a\\sb" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a-b" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a\\Sb" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a b" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a\\Sb" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a-b" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\d" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("1" : stdgo.GoString), ("Pass. Group[0]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\d" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\D" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("1" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\D" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-" : stdgo.GoString), ("Pass. Group[0]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("[\\w]" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a" : stdgo.GoString), ("Pass. Group[0]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("[\\w]" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("[\\W]" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("[\\W]" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-" : stdgo.GoString), ("Pass. Group[0]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[\\s]b" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a b" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[\\s]b" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a-b" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[\\S]b" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a b" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[\\S]b" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a-b" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("[\\d]" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("1" : stdgo.GoString), ("Pass. Group[0]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("[\\d]" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("[\\D]" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("1" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("[\\D]" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-" : stdgo.GoString), ("Pass. Group[0]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab|cd" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abc" : stdgo.GoString), ("Pass. Group[0]=(0,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab|cd" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abcd" : stdgo.GoString), ("Pass. Group[0]=(2,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("()ef" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("def" : stdgo.GoString), ("Pass. Group[0]=(1,2) Group[1]=(1,0)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("*a" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-" : stdgo.GoString), ("Error." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(*)b" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-" : stdgo.GoString), ("Error." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("$b" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("b" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a\\" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-" : stdgo.GoString), ("Error." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a\\(b" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a(b" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a\\(*b" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ab" : stdgo.GoString), ("Pass. Group[0]=(0,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a\\(*b" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a((b" : stdgo.GoString), ("Pass. Group[0]=(0,4)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a\\\\b" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a\\b" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abc)" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-" : stdgo.GoString), ("Error." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(abc" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-" : stdgo.GoString), ("Error." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("((a))" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abc" : stdgo.GoString), ("Pass. Group[0]=(0,1) Group[1]=(0,1) Group[2]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(a)b(c)" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abc" : stdgo.GoString), ("Pass. Group[0]=(0,3) Group[1]=(0,1) Group[2]=(2,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a+b+c" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aabbabc" : stdgo.GoString), ("Pass. Group[0]=(4,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a{1,}b{1,}c" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aabbabc" : stdgo.GoString), ("Pass. Group[0]=(4,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a**" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-" : stdgo.GoString), ("Error." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a.+?c" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abcabc" : stdgo.GoString), ("Pass. Group[0]=(3,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(a+|b)*" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ab" : stdgo.GoString), ("Pass. Group[0]=(0,2) Group[1]=(1,1)(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(a+|b){0,}" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ab" : stdgo.GoString), ("Pass. Group[0]=(0,2) Group[1]=(1,1)(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(a+|b)+" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ab" : stdgo.GoString), ("Pass. Group[0]=(0,2) Group[1]=(1,1)(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(a+|b){1,}" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ab" : stdgo.GoString), ("Pass. Group[0]=(0,2) Group[1]=(1,1)(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(a+|b)?" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ab" : stdgo.GoString), ("Pass. Group[0]=(1,1) Group[1]=(1,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(a+|b){0,1}" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ab" : stdgo.GoString), ("Pass. Group[0]=(1,1) Group[1]=(1,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, (")(" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-" : stdgo.GoString), ("Error." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("[^ab]*" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("cde" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abc" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), (stdgo.Go.str() : stdgo.GoString)?.__copy__(), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a*" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), (stdgo.Go.str() : stdgo.GoString)?.__copy__(), ("Pass. Group[0]=(0,0)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("([abc])*d" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abbbcd" : stdgo.GoString), ("Pass. Group[0]=(0,6) Group[1]=(4,1)(3,1)(2,1)(1,1)(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("([abc])*bcd" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abcd" : stdgo.GoString), ("Pass. Group[0]=(0,4) Group[1]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a|b|c|d|e" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("e" : stdgo.GoString), ("Pass. Group[0]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(a|b|c|d|e)f" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ef" : stdgo.GoString), ("Pass. Group[0]=(0,2) Group[1]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abcd*efg" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abcdefg" : stdgo.GoString), ("Pass. Group[0]=(0,7)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab*" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("xabyabbbz" : stdgo.GoString), ("Pass. Group[0]=(4,4)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("ab*" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("xayabbbz" : stdgo.GoString), ("Pass. Group[0]=(3,4)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(ab|cd)e" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abcde" : stdgo.GoString), ("Pass. Group[0]=(2,3) Group[1]=(2,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("[abhgefdc]ij" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("hij" : stdgo.GoString), ("Pass. Group[0]=(0,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^(ab|cd)e" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abcde" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(abc|)ef" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abcdef" : stdgo.GoString), ("Pass. Group[0]=(4,2) Group[1]=(4,0)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(a|b)c*d" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abcd" : stdgo.GoString), ("Pass. Group[0]=(1,3) Group[1]=(1,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(ab|ab*)bc" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abc" : stdgo.GoString), ("Pass. Group[0]=(0,3) Group[1]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a([bc]*)c*" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abc" : stdgo.GoString), ("Pass. Group[0]=(0,3) Group[1]=(1,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a([bc]*)(c*d)" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abcd" : stdgo.GoString), ("Pass. Group[0]=(0,4) Group[1]=(1,1) Group[2]=(2,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a([bc]+)(c*d)" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abcd" : stdgo.GoString), ("Pass. Group[0]=(0,4) Group[1]=(1,1) Group[2]=(2,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a([bc]*)(c+d)" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abcd" : stdgo.GoString), ("Pass. Group[0]=(0,4) Group[1]=(1,1) Group[2]=(2,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[bcd]*dcdcde" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("adcdcde" : stdgo.GoString), ("Pass. Group[0]=(0,7)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[bcd]+dcdcde" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("adcdcde" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(ab|a)b*c" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abc" : stdgo.GoString), ("Pass. Group[0]=(0,3) Group[1]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("((a)(b)c)(d)" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abcd" : stdgo.GoString), ("Pass. Group[0]=(0,4) Group[1]=(0,3) Group[2]=(0,1) Group[3]=(1,1) Group[4]=(3,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("[a-zA-Z_][a-zA-Z0-9_]*" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("alpha" : stdgo.GoString), ("Pass. Group[0]=(0,5)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^a(bc+|b[eh])g|.h$" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abh" : stdgo.GoString), ("Pass. Group[0]=(1,2) Group[1]=" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(bc+d$|ef*g.|h?i(j|k))" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("effgz" : stdgo.GoString), ("Pass. Group[0]=(0,5) Group[1]=(0,5) Group[2]=" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(bc+d$|ef*g.|h?i(j|k))" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ij" : stdgo.GoString), ("Pass. Group[0]=(0,2) Group[1]=(0,2) Group[2]=(1,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(bc+d$|ef*g.|h?i(j|k))" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("effg" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(bc+d$|ef*g.|h?i(j|k))" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("bcdd" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(bc+d$|ef*g.|h?i(j|k))" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("reffgz" : stdgo.GoString), ("Pass. Group[0]=(1,5) Group[1]=(1,5) Group[2]=" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("((((((((((a))))))))))" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a" : stdgo.GoString), ("Pass. Group[0]=(0,1) Group[1]=(0,1) Group[2]=(0,1) Group[3]=(0,1) Group[4]=(0,1) Group[5]=(0,1) Group[6]=(0,1) Group[7]=(0,1) Group[8]=(0,1) Group[9]=(0,1) Group[10]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("((((((((((a))))))))))\\10" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aa" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\10((((((((((a))))))))))" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aa" : stdgo.GoString), ("Pass. Group[0]=(0,2) Group[1]=(1,1) Group[2]=(1,1) Group[3]=(1,1) Group[4]=(1,1) Group[5]=(1,1) Group[6]=(1,1) Group[7]=(1,1) Group[8]=(1,1) Group[9]=(1,1) Group[10]=(1,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("((((((((((a))))))))))!" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aa" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("((((((((((a))))))))))!" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a!" : stdgo.GoString), ("Pass. Group[0]=(0,2) Group[1]=(0,1) Group[2]=(0,1) Group[3]=(0,1) Group[4]=(0,1) Group[5]=(0,1) Group[6]=(0,1) Group[7]=(0,1) Group[8]=(0,1) Group[9]=(0,1) Group[10]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(((((((((a)))))))))" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a" : stdgo.GoString), ("Pass. Group[0]=(0,1) Group[1]=(0,1) Group[2]=(0,1) Group[3]=(0,1) Group[4]=(0,1) Group[5]=(0,1) Group[6]=(0,1) Group[7]=(0,1) Group[8]=(0,1) Group[9]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("multiple words of text" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("uh-uh" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("multiple words" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("multiple words, yeah" : stdgo.GoString), ("Pass. Group[0]=(0,14)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(.*)c(.*)" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abcde" : stdgo.GoString), ("Pass. Group[0]=(0,5) Group[1]=(0,2) Group[2]=(3,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\((.*), (.*)\\)" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("(a, b)" : stdgo.GoString), ("Pass. Group[0]=(0,6) Group[1]=(1,1) Group[2]=(4,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("[k]" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ab" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("abcd" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abcd" : stdgo.GoString), ("Pass. Group[0]=(0,4)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a(bc)d" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abcd" : stdgo.GoString), ("Pass. Group[0]=(0,4) Group[1]=(1,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a[-]?c" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ac" : stdgo.GoString), ("Pass. Group[0]=(0,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(abc)\\1" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abcabc" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\1(abc)" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abcabc" : stdgo.GoString), ("Pass. Group[0]=(0,6) Group[1]=(3,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("([a-c]*)\\1" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abcabc" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\1([a-c]*)" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("abcabc" : stdgo.GoString), ("Pass. Group[0]=(0,6) Group[1]=(3,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\1" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-" : stdgo.GoString), ("Error." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\2" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-" : stdgo.GoString), ("Error." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(a)|\\1" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a" : stdgo.GoString), ("Pass. Group[0]=(0,1) Group[1]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(a)|\\1" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("x" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(a)|\\2" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("-" : stdgo.GoString), ("Error." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(([a-c])b*?\\2)*" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ababbbcbc" : stdgo.GoString), ("Pass. Group[0]=(9,0) Group[1]= Group[2]=" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(([a-c])b*?\\2){3}" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("ababbbcbc" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("((\\3|b)\\2(a)x)+" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aaxabxbaxbbx" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("((\\3|b)\\2(a)x)+" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("aaaxabaxbaaxbbax" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("((\\3|b)\\2(a)){2,}" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("bbaababbabaaaaabbaaaabba" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("\\((?>[^()]+|\\((?<depth>)|\\)(?<-depth>))*(?(depth)(?!))\\)" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("((a(b))c)" : stdgo.GoString), ("Pass. Group[0]=(0,9) Group[1]=" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^\\((?>[^()]+|\\((?<depth>)|\\)(?<-depth>))*(?(depth)(?!))\\)$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("((a(b))c)" : stdgo.GoString), ("Pass. Group[0]=(0,9) Group[1]=" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^\\((?>[^()]+|\\((?<depth>)|\\)(?<-depth>))*(?(depth)(?!))\\)$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("((a(b))c" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^\\((?>[^()]+|\\((?<depth>)|\\)(?<-depth>))*(?(depth)(?!))\\)$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("())" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(((?<foo>\\()[^()]*)+((?<bar-foo>\\))[^()]*)+)+(?(foo)(?!))" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("((a(b))c)" : stdgo.GoString), ("Pass. Group[0]=(0,9) Group[1]=(0,9) Group[2]=(0,1)(1,2)(3,2) Group[3]=(5,1)(6,2)(8,1) Group[4]= Group[5]=(4,1)(2,4)(1,7)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^(((?<foo>\\()[^()]*)+((?<bar-foo>\\))[^()]*)+)+(?(foo)(?!))$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("((a(b))c)" : stdgo.GoString), ("Pass. Group[0]=(0,9) Group[1]=(0,9) Group[2]=(0,1)(1,2)(3,2) Group[3]=(5,1)(6,2)(8,1) Group[4]= Group[5]=(4,1)(2,4)(1,7)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(((?<foo>\\()[^()]*)+((?<bar-foo>\\))[^()]*)+)+(?(foo)(?!))" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("x(a((b)))b)x" : stdgo.GoString), ("Pass. Group[0]=(1,9) Group[1]=(1,9) Group[2]=(1,2)(3,1)(4,2) Group[3]=(6,1)(7,1)(8,2) Group[4]= Group[5]=(5,1)(4,3)(2,6)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("(((?<foo>\\()[^()]*)+((?<bar-foo>\\))[^()]*)+)+(?(foo)(?!))" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("x((a((b)))x" : stdgo.GoString), ("Pass. Group[0]=(2,9) Group[1]=(2,9) Group[2]=(2,2)(4,1)(5,2) Group[3]=(7,1)(8,1)(9,2) Group[4]= Group[5]=(6,1)(5,3)(3,6)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^(((?<foo>\\()[^()]*)+((?<bar-foo>\\))[^()]*)+)+(?(foo)(?!))$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("((a(b))c" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^(((?<foo>\\()[^()]*)+((?<bar-foo>\\))[^()]*)+)+(?(foo)(?!))$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("((a(b))c))" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^(((?<foo>\\()[^()]*)+((?<bar-foo>\\))[^()]*)+)+(?(foo)(?!))$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), (")(" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^(((?<foo>\\()[^()]*)+((?<bar-foo>\\))[^()]*)+)+(?(foo)(?!))$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("((a((b))c)" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("b" : stdgo.GoString), (64 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("babaaa" : stdgo.GoString), ("Pass. Group[0]=(2,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^((\\[(?<NAME>[^\\]]+)\\])|(?<NAME>[^\\.\\[\\]]+))$" : stdgo.GoString), (13 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("[n]" : stdgo.GoString), ("Pass. Group[0]=(0,3) Group[1]=(1,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^((\\[(?<NAME>[^\\]]+)\\])|(?<NAME>[^\\.\\[\\]]+))$" : stdgo.GoString), (13 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("n" : stdgo.GoString), ("Pass. Group[0]=(0,1) Group[1]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^((\\[(?<NAME>[^\\]]+)\\])|(?<NAME>[^\\.\\[\\]]+))$" : stdgo.GoString), (13 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("n[i]e" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^((\\[(?<NAME>[^\\]]+)\\])|(?<NAME>[^\\.\\[\\]]+))$" : stdgo.GoString), (13 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("[n" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^((\\[(?<NAME>[^\\]]+)\\])|(?<NAME>[^\\.\\[\\]]+))$" : stdgo.GoString), (13 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("]n]" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^((\\[(?<NAME>[^\\]]+)\\])|(?<NAME>[^\\.\\[\\]]+))$" : stdgo.GoString), (13 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("\\[n\\]" : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^((\\[(?<NAME>[^\\]]+)\\])|(?<NAME>[^\\.\\[\\]]+))$" : stdgo.GoString), (13 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("[n\\]" : stdgo.GoString), ("Pass. Group[0]=(0,4) Group[1]=(1,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^((\\[(?<NAME>[^\\]]+)\\])|(?<NAME>[^\\.\\[\\]]+))$" : stdgo.GoString), (13 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("[n\\[]" : stdgo.GoString), ("Pass. Group[0]=(0,5) Group[1]=(1,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^((\\[(?<NAME>[^\\]]+)\\])|(?<NAME>[^\\.\\[\\]]+))$" : stdgo.GoString), (13 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("[[n]" : stdgo.GoString), ("Pass. Group[0]=(0,4) Group[1]=(1,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^((\\[(?<SCHEMA>[^\\]]+)\\])|(?<SCHEMA>[^\\.\\[\\]]+))\\s*\\.\\s*((\\[(?<NAME>[^\\]]+)\\])|(?<NAME>[^\\.\\[\\]]+))$" : stdgo.GoString), (13 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("[s] . [n]" : stdgo.GoString), ("Pass. Group[0]=(0,9) Group[1]=(1,1) Group[2]=(7,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^((\\[(?<SCHEMA>[^\\]]+)\\])|(?<SCHEMA>[^\\.\\[\\]]+))\\s*\\.\\s*((\\[(?<NAME>[^\\]]+)\\])|(?<NAME>[^\\.\\[\\]]+))$" : stdgo.GoString), (13 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("[s] . n" : stdgo.GoString), ("Pass. Group[0]=(0,7) Group[1]=(1,1) Group[2]=(6,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^((\\[(?<SCHEMA>[^\\]]+)\\])|(?<SCHEMA>[^\\.\\[\\]]+))\\s*\\.\\s*((\\[(?<NAME>[^\\]]+)\\])|(?<NAME>[^\\.\\[\\]]+))$" : stdgo.GoString), (13 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("s.[ n ]" : stdgo.GoString), ("Pass. Group[0]=(0,7) Group[1]=(0,1) Group[2]=(3,3)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^((\\[(?<SCHEMA>[^\\]]+)\\])|(?<SCHEMA>[^\\.\\[\\]]+))\\s*\\.\\s*((\\[(?<NAME>[^\\]]+)\\])|(?<NAME>[^\\.\\[\\]]+))$" : stdgo.GoString), (13 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), (" . n" : stdgo.GoString), ("Pass. Group[0]=(0,4) Group[1]=(0,1) Group[2]=(3,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^((\\[(?<SCHEMA>[^\\]]+)\\])|(?<SCHEMA>[^\\.\\[\\]]+))\\s*\\.\\s*((\\[(?<NAME>[^\\]]+)\\])|(?<NAME>[^\\.\\[\\]]+))$" : stdgo.GoString), (13 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("s. " : stdgo.GoString), ("Pass. Group[0]=(0,3) Group[1]=(0,1) Group[2]=(2,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^((\\[(?<SCHEMA>[^\\]]+)\\])|(?<SCHEMA>[^\\.\\[\\]]+))\\s*\\.\\s*((\\[(?<NAME>[^\\]]+)\\])|(?<NAME>[^\\.\\[\\]]+))$" : stdgo.GoString), (13 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("[.]. " : stdgo.GoString), ("Pass. Group[0]=(0,5) Group[1]=(1,1) Group[2]=(4,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^((\\[(?<CATALOG>[^\\]]+)\\])|(?<CATALOG>[^\\.\\[\\]]+))\\s*\\.\\s*((\\[(?<SCHEMA>[^\\]]+)\\])|(?<SCHEMA>[^\\.\\[\\]]+))\\s*\\.\\s*((\\[(?<NAME>[^\\]]+)\\])|(?<NAME>[^\\.\\[\\]]+))$" : stdgo.GoString), (13 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("[c].[s].[n]" : stdgo.GoString), ("Pass. Group[0]=(0,11) Group[1]=(1,1) Group[2]=(5,1) Group[3]=(9,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^((\\[(?<CATALOG>[^\\]]+)\\])|(?<CATALOG>[^\\.\\[\\]]+))\\s*\\.\\s*((\\[(?<SCHEMA>[^\\]]+)\\])|(?<SCHEMA>[^\\.\\[\\]]+))\\s*\\.\\s*((\\[(?<NAME>[^\\]]+)\\])|(?<NAME>[^\\.\\[\\]]+))$" : stdgo.GoString), (13 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), (" c . s . n " : stdgo.GoString), ("Pass. Group[0]=(0,11) Group[1]=(0,3) Group[2]=(5,2) Group[3]=(9,2)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^((\\[(?<CATALOG>[^\\]]+)\\])|(?<CATALOG>[^\\.\\[\\]]+))\\s*\\.\\s*((\\[(?<SCHEMA>[^\\]]+)\\])|(?<SCHEMA>[^\\.\\[\\]]+))\\s*\\.\\s*((\\[(?<NAME>[^\\]]+)\\])|(?<NAME>[^\\.\\[\\]]+))$" : stdgo.GoString), (13 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), (" . [.] . [ ]" : stdgo.GoString), ("Pass. Group[0]=(0,12) Group[1]=(0,1) Group[2]=(4,1) Group[3]=(10,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^((\\[(?<CATALOG>[^\\]]+)\\])|(?<CATALOG>[^\\.\\[\\]]+))\\s*\\.\\s*((\\[(?<NAME>[^\\]]+)\\])|(?<NAME>[^\\.\\[\\]]+))$" : stdgo.GoString), (13 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("c.n" : stdgo.GoString), ("Pass. Group[0]=(0,3) Group[1]=(0,1) Group[2]=(2,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^((\\[(?<CATALOG>[^\\]]+)\\])|(?<CATALOG>[^\\.\\[\\]]+))\\s*\\.\\s*((\\[(?<NAME>[^\\]]+)\\])|(?<NAME>[^\\.\\[\\]]+))$" : stdgo.GoString), (13 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("[c] .[n]" : stdgo.GoString), ("Pass. Group[0]=(0,8) Group[1]=(1,1) Group[2]=(6,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^((\\[(?<CATALOG>[^\\]]+)\\])|(?<CATALOG>[^\\.\\[\\]]+))\\s*\\.\\s*((\\[(?<NAME>[^\\]]+)\\])|(?<NAME>[^\\.\\[\\]]+))$" : stdgo.GoString), (13 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("c.n." : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^((\\[(?<SCHEMA>[^\\]]+)\\])|(?<SCHEMA>[^\\.\\[\\]]+))\\s*\\.\\s*((\\[(?<CATALOG>[^\\]]+)\\])|(?<CATALOG>[^\\.\\[\\]]+))\\s*\\.\\s*((\\[(?<NAME>[^\\]]+)\\])|(?<NAME>[^\\.\\[\\]]+))$" : stdgo.GoString), (13 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("s.c.n" : stdgo.GoString), ("Pass. Group[0]=(0,5) Group[1]=(0,1) Group[2]=(2,1) Group[3]=(4,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^((\\[(?<SCHEMA>[^\\]]+)\\])|(?<SCHEMA>[^\\.\\[\\]]+))\\s*\\.\\s*((\\[(?<CATALOG>[^\\]]+)\\])|(?<CATALOG>[^\\.\\[\\]]+))\\s*\\.\\s*((\\[(?<NAME>[^\\]]+)\\])|(?<NAME>[^\\.\\[\\]]+))$" : stdgo.GoString), (13 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("[s].[c].[n]" : stdgo.GoString), ("Pass. Group[0]=(0,11) Group[1]=(1,1) Group[2]=(5,1) Group[3]=(9,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^((\\[(?<SCHEMA>[^\\]]+)\\])|(?<SCHEMA>[^\\.\\[\\]]+))\\s*\\.\\s*((\\[(?<CATALOG>[^\\]]+)\\])|(?<CATALOG>[^\\.\\[\\]]+))\\s*\\.\\s*((\\[(?<NAME>[^\\]]+)\\])|(?<NAME>[^\\.\\[\\]]+))$" : stdgo.GoString), (13 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("[s].[c]." : stdgo.GoString), ("Fail." : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^((\\[(?<ColName>.+)\\])|(?<ColName>\\S+))([ ]+(?<Order>ASC|DESC))?$" : stdgo.GoString), (5 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("[id]]" : stdgo.GoString), ("Pass. Group[0]=(0,5) Group[1]=(1,3) Group[2]=" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("a{1,2147483647}" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("a" : stdgo.GoString), ("Pass. Group[0]=(0,1)" : stdgo.GoString));
        _internal.github_dot_com.dlclark.regexp2.Regexp2__runregextrial._runRegexTrial(_t, ("^((\\[(?<NAME>[^\\]]+)\\])|(?<NAME>[^\\.\\[\\]]+))$" : stdgo.GoString), (0 : _internal.github_dot_com.dlclark.regexp2.Regexp2_regexoptions.RegexOptions), ("[a]" : stdgo.GoString), ("Pass. Group[0]=(0,3) Group[1]=(0,3) Group[2]=(0,3) Group[3]=(1,1)" : stdgo.GoString));
    }
